@use 'sass:math';

@include xs {

$font-weight: thin,normal, lighter, light, bold, bolder, 100, 200, 300, 400, 500, 600, 700, 800,  900;
$cursor: pointer, not-allowed, scroll;
$utilities: (
  "padding": (
    "prefix": "xs:p",
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8
    ),
  ),
  "padding-left": (
    "prefix": "xs:pl",
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8
    ),
  ),
  "padding-right": (
    "prefix": "xs:pr",
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8
    ),
  ),
  "padding-top": (
    "prefix": "xs:pt",
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8
    ),
  ),
  "padding-bottom": (
    "prefix": "xs:pb",
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8
    ),
  ),
  "margin": (
    "prefix": "xs:m",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8
    ),
  ),
  "margin-left": (
    "prefix": "xs:ml",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8
    ),
  ),
  "margin-right": (
    "prefix": "xs:mr",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8
    ),
  ),
  "margin-top": (
    "prefix": "xs:mt",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8
    ),
  ),
  "margin-bottom": (
    "prefix": "xs:mb",
    "values": (
      "0": 0,
      "1": $base-margin,
      "2": $base-margin * 2,
      "3": $base-margin * 4,
      "4": $base-margin * 6,
      "5": $base-margin * 8
    ),
  ),

  "opacity": (
    "prefix": "xs:o",
    "values": (
      "10": 0.1,
      "20": 0.2,
      "30": 0.3,
      "40": 0.4,
      "50": 0.5,
      "60": 0.6,
      "70": 0.7,
      "80": 0.8,
      "90": 0.9,
      "100": 1,
    ),
  ),
  "border-radius": (
    "prefix": "xs:br",
    "values": (
      "default": $base-border-radius,
      "none": 0,
      "xs": math.div($base-border-radius, 4),
      "sm": math.div($base-border-radius, 2),
      "lg": $base-border-radius * 2,
      "full": 50%,
    )
  ),
  "display": (
    "prefix": "xs:display",
    "values": (
      "n": none,
      "b": block,
      "f": flex,
      "i": inline,
      "i-b": inline-block
    )
  ),

  "align-items": (
    "prefix": "xs:align",
    "values": (
      "f-start": flex-start,
      "f-end": flex-end,
      "center": center
    )
  ),

  "flex-direction": (
    "prefix": "xs:flex",
    "values": (
      "row": row,
      "column": column,
    )
  ),

  "justify-content": (
    "prefix": "xs:justify",
    "values": (
      "between": space-between,
      "f-end": flex-end,
      "center": center,
      "around": space-around,
      "evenly": space-evenly
    )
  ),

  "text-align": (
    "prefix": "xs:text",
    "values": (
        "center" : center,
        "start" : start,
        "end" : end,
        "left" : left,
        "right" : right,
        "justify": justify,
        )
  ),
  
  "font-size": (
    "prefix": "xs:text",
    "values": (
        "d2xl" : $base-font-size * 7.2,
        "dxl" : $base-font-size * 6,
        "dlg" : $base-font-size * 4.8,
        "dmd" : $base-font-size * 3.6,
        "dsm" : $base-font-size * 3.2,
        "dxs" : $base-font-size * 2.4,
        "xxl" : $base-font-size * 2.4,
        "xl" : $base-font-size * 2,
        "lg" : $base-font-size * 1.8,
        "md" : $base-font-size * 1.6,
        "sm" : $base-font-size * 1.4,
        "xs" : $base-font-size * 1.2,
        "macro" : $base-font-size,
        )
  )
);

// generate utility classes with decimal values
@each $i in $sizing  {

  //create the object properties from 1 to 72
 $util :(
   "padding": (
    "prefix": "xs:p",
    "values": (
      #{$i}: $base-padding * $i,
    ),
  ),
 );

// loop through and generate the classes
    @each $property, $map in $util {
      $prefix: map-get($map, "prefix");
      $values: map-get($map, "values");
  
      @each $k, $v in $values {
          @if($k == "default"){
              .#{$prefix}{
                  #{$property} : $v;
              }
          } @else {
              .#{$prefix}-#{$k}{
                  #{$property} : $v;
              
          }
      }
    }
  };
  
  }




  //loop through and generate the decimal classes
  @each $i in $sizing  {
    @for $j from 0 through 9 {
    //create the object properties from 1 to 72
   $util :(
     "padding": (
      "prefix": "xs:p",
      "values": (
        #{$i}: $base-padding * $i,
      ),
    ),
   );


    //generate the decimal classes
    @each $property, $map in $util {
      $prefix: map-get($map, "prefix");
      $values: map-get($map, "values");
   
          .#{$prefix}-#{$i}-#{$j}{
            #{$property} :  #{$base-padding * $i + math.div($j, 10)};
          }
  
        }
    
    }}
    

//generate utility classes
@each $property, $map in $utilities {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
        @if($k == "default"){
            .#{$prefix}{
                #{$property} : $v;
            }
        } @else {
            .#{$prefix}-#{$k}{
                #{$property} : $v;
            }
        }}
    };

  
    //flex related
    @for $i from 0 to 50 {
      .xs:gap-#{$i}{
        gap: $i + rem;
      }
    }

    //grid-relate
    .grid-center {
        display: grid;
        place-items: center;
    }

    //width
    @for $i from 0 to 2000 {
      .xs:w-#{$i}{
        width: $i + rem;
      }
    }

    //border & radius related
    .curved {
        border-radius: 1rem;
    }

    .curved-top {
        border-top-right-radius: 1rem;
        border-top-left-radius: 1rem;
    }

    .rounded {
        border-radius: 50%;
    }

    @for $i from 0 to 100 {
      .xs:wp-#{$i}{
        width: percentage(math.div($i, 100));
      }
    }

    //mouse related 
    @each $v in $cursor {
        .cursor-#{$v} {
            cursor: $v;
        }
    }

    

    //font-related
    @each $v in $font-weight {
      .font-#{$v}{
        font-weight: $v;
      }
    }
    

   // box shadows

    $shadow: (
    "xs": (0px 3px 4px -5px rgba(51, 51, 51, 0.03), 0px 1px 2px rgba(51, 51, 51, 0.05)),
    "s" : (0px 3px 4px rgba(51, 51, 51, 0.04), 0px 0px 2px rgba(51, 51, 51, 0.02)),
    "a" : (0px 32px 41px -23px rgba(51, 51, 51, 0.07), 0px 2px 6px rgba(51, 51, 51, 0.06)),
   );

   @each $k, $v in $shadow {
    .shadow-#{$k} {
      box-shadow : $v
    }
   }




// generate utility classes with decimal values

// @each $property, $map in $utilities {
//   $prefix: map-get($map, "prefix");
//   $values: map-get($map, "values");

//   @for $i from 1 to 72 {
//     @for $j from 1 to 9 {
//       .#{$prefix}-#{$i}.#{$j}{
//         #{$property} : #{$i + $j/10};
//       }
//     }
//   }
// }

}